// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=rA, b=rB, c=rC, d=rD, e=rE, f=rF, g=rG, h=rH);

    RAM4K(in=in, load=rA, address=address[2..13], out=ramA);
    RAM4K(in=in, load=rB, address=address[2..13], out=ramB);
    RAM4K(in=in, load=rC, address=address[2..13], out=ramC);
    RAM4K(in=in, load=rD, address=address[2..13], out=ramD);
    RAM4K(in=in, load=rE, address=address[2..13], out=ramE);
    RAM4K(in=in, load=rF, address=address[2..13], out=ramF);
    RAM4K(in=in, load=rG, address=address[2..13], out=ramG);
    RAM4K(in=in, load=rH, address=address[2..13], out=ramH);
    
    Mux8Way16(a=ramA, b=ramB, c=ramC, d=ramD, e=ramE, f=ramF, g=ramG, h=ramH, sel=address[0..2], out=out);
}
